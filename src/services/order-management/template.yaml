AWSTemplateFormatVersion: 2010-09-09
Description: >-
  order-management-service code

Transform:
- AWS::Serverless-2016-10-31

Resources:
  getOrderFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      CodeUri: app/
      Handler: dist/src/handlers/get-order.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: Get a customers order
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{customerId}/{orderNumber}
            Method: GET
  getCustomerOrdersFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      CodeUri: app/
      Handler: dist/src/handlers/get-customer-orders.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: Get all orders for a customer
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{customerId}/orders/list
            Method: GET

  createOrderFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      CodeUri: app/
      Handler: dist/src/handlers/create-order.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: Create a new customer order
      Policies:
        - Statement:
          - Effect: Allow
            Resource: '*'
            Action:
              - events:PutEvents
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{customerId}
            Method: POST
            
  cancelOrderFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      CodeUri: app/
      Handler: dist/src/handlers/cancel-order.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: Cancel a customer order
      Policies:
        - Statement:
          - Effect: Allow
            Resource: '*'
            Action:
              - events:PutEvents
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{customerId}/{orderNumber}/cancel
            Method: POST
            
  orderDispatchedHandler:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      CodeUri: app/
      Handler: dist/src/handlers/order-dispatched-event-handler.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: Handle an order dispatched event from the event bus.
      Events:
        Trigger:
          Type: CloudWatchEvent 
          Properties:
            Pattern:
              source:
                - com.kitchen
              detail-type:
                - order-dispatched
            
  stockChecker:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      CodeUri: app/
      Handler: dist/src/handlers/stock-checker.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: Stock checker function used in order acceptance step function.
            
  paymentProcessor:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      CodeUri: app/
      Handler: dist/src/handlers/payment-processor.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: Payment processing function used in order acceptance step function.
      
  OrderAcceptanceStateMachine:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Properties:
      DefinitionUri: dist/src/infrastructure/state-machine/order_acceptance.asl.json
      DefinitionSubstitutions:
        StockCheckerFunctionArn: !GetAtt stockChecker.Arn
        PaymentProcessorFunctionArn: !GetAtt paymentProcessor.Arn
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref stockChecker
        - LambdaInvokePolicy:
            FunctionName: !Ref paymentProcessor

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
